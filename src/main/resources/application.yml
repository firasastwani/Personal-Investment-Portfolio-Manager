spring:
  application:
    name: pipsap

  datasource:
    url: jdbc:mysql://localhost:3306/pipsap_db
    username: root
    password: mysqlpass
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect

  redis:
    host: localhost
    port: 6379 # default redis port
    timeout: 2000ms # 2 seconds
    lettuce:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
        max-wait: -1ms

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: pipsap-monolith-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      auto-offset-reset: earliest
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

price-update:
  # cache properties
  cache:
    ttl-minutes: 10
    max-batch-size: 50
  # Algorithm properties
  algorithm:
    portfolio-weight: 0.6
    watchlist-weight: 0.3
    time-weight: 0.1
    min-update-interval-minutes: 5
  microservice:
    grpc:
      host: localhost
      port: 9090 # default gRPC port
    kafka:
      request-topic: price-update-requests
      response-topic: stock-price-updates
      enabled: true
  logging:
    level:
      com.pipsap.pipsap.service: DEBUG

app:
  jwt:
    secret: 404E635266556A586E3272357538782F413F4428472B4B6250645367566B5970
    expiration: 900000
    refresh-expiration: 86400000

logging:
  level:
    org:
      springframework:
        security: DEBUG
        web:
          servlet: DEBUG
          filter: DEBUG
          cors: DEBUG
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE
    com:
      pipsap:
        pipsap: DEBUG
